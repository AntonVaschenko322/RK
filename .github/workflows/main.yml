name: Build, test and archive

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:

  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Install dependencies
      run: |
        sudo apt-get -qq update
        sudo apt-get install -y cmake lcov 

    - name: Configure CMake

      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build

      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build/test/

      run: ctest -C ${{env.BUILD_TYPE}}

    - name: Install GTest
      run: |
        sudo apt-get install -y libgtest-dev
    - name: Run tests
      run: |
        cd build/test && ctest --output-on-failure && ${{github.workspace}}/build/test/test

  job:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        
    - name: Install dependencies
      run: |
        sudo apt-get -qq update
        sudo apt-get install -y \
          cmake \
          build-essential \
          dpkg-dev
        
    - name: Configure CMake
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release

    - name: Build
      run: cmake --build build --config Release --parallel $(nproc)

    - name: Create DEB package
      working-directory: ${{github.workspace}}/build
      run: cpack -G DEB
     
    - name: Upload DEB artifact
      uses: actions/upload-artifact@v4
      with:
        name: ubuntu-deb-package
        path: build/*.deb
    
  create_release:
      needs: job
      runs-on: ubuntu-latest
      permissions:
        contents: write 

      steps:
      - uses: actions/checkout@v4

      - name: download_ubuntu_deb
        uses: actions/download-artifact@v4
        with:
          name: ubuntu-latest-deb-pack
          path: artifacts/linux
          
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v1.${{ github.run_number }}
          name: Release v1.${{ github.run_number }}
          files: |
            artifacts/linux/*.deb
            artifacts/linux/*.tar.gz  
